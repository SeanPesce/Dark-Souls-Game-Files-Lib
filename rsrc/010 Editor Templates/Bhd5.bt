//--------------------------------------
//--- 010 Editor v3.1.2 Binary Template
//
// File: Dark Souls .BHD5 (Archive Header)
// Author: Jed "Nyxojaele" Lang (Some edits by Sean Pesce)
// Revision: 1
//--------------------------------------
#ifndef _DS1_BHD5_BT
    #define _DS1_BHD5_BT

#include "BhdDefaultFileNames.bt"

// Uncomment next line for useful debug output
//#define _DS1_DEBUG

SetBackColor(cLtBlue);
InitializeFileNameMappingPrecalculated();
local ulong currentBucketOffset;

typedef struct {
    ulong Hash <format=hex>;
    ulong Size <format=hex>;
    quad Offset <format=hex>;
} Entry <read=GetEntryFileName>;

string GetEntryFileName(Entry &E) {
    return GetFileNameFromHash(E.Hash);
}

typedef struct {
    FSeek(currentBucketOffset);
    ulong EntryCount;
    ulong EntriesOffset <format=hex>;
    currentBucketOffset = FTell();
    FSeek(EntriesOffset);
    Entry Entries[EntryCount] <optimize=false>;
} BucketStruct <comment=GetAllEntryFileNamesOneLine>;

string GetAllEntryFileNamesOneLine(BucketStruct &Bs) {
    string s = "";
    #ifdef _DS1_DEBUG
    local uint i = 0;
    for (i = 0; i < Bs.EntryCount; i++) {
        if (i > 0) {
            s += ";  ";
        }
        s += GetFileNameFromHash(Bs.Entries[i].Hash);
    }
    #endif // _DS1_DEBUG
    return s;
}

string GetAllEntryFileNames(BucketStruct &Bs) {
    local string s = "  ";
    local uint i = 0;
    for (i = 0; i < Bs.EntryCount; i++) {
        if (i > 0) {
            s += "\n  ";
        }
        s += GetFileNameFromHash(Bs.Entries[i].Hash);
    }
    return s;
}

string MapFileNameToBdtOffset(BucketStruct &Bs) {
    local string s = "";
    local uint i = 0;
    for (i = 0; i < Bs.EntryCount; i++) {
        if (i > 0) {
            s += "\n";
        }
        SPrintf(s, "%sbdt_off_to_fn.insert(std::make_pair(%u, \"%s\"));", s, Bs.Entries[i].Offset, GetFileNameFromHash(Bs.Entries[i].Hash));
    }
    return s;
}

ulong Signature;
ulong EndianCheck;
if (EndianCheck == 0x00)
    BigEndian();
ulong Version;

ulong ArchiveSize;
ulong BucketCount;
ulong BucketsOffset <format=hex>;

currentBucketOffset = BucketsOffset;
BucketStruct Bucket[BucketCount] <optimize=false>;

#ifdef _DS1_DEBUG
local uint i = 0;
for (i = 0; i < BucketCount; i++) {
    Printf("i=%d\n%s\n", i, GetAllEntryFileNames(Bucket[i]));
}
#endif // _DS1_DEBUG

//local uint j = 0;
//for (j = 0; j < BucketCount; j++) {
//    Printf("%s\n", MapFileNameToBdtOffset(Bucket[j]));
//}

#endif // _DS1_BHD5_BT