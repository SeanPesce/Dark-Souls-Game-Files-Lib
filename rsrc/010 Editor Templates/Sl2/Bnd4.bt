//----------------------------------------------------------------------------
//--- 010 Editor v5.0 Binary Template
//
// File: Sl2/Bnd4.bt
// Author: Tarvitz
// Revision: 0.5
// Purpose: Parsing data from BND4 archive files
//----------------------------------------------------------------------------
#ifndef _SL2_BND4_BT
    #define _SL2_BND4_BT

struct SlotMeta(int slotSize){
    uint block_id <fgcolor=cWhite, bgcolor=cLtBlue>;
    uint unknown_1 <bgcolor=cLtPurple>;
    uint block_size <fgcolor=cDkGreen>;
    uint unknown_2 <bgcolor=cLtPurple>;
    uint start <bgcolor=cLtGreen>;
    // Don't know why, but save file with block size 0x20 has title offset
    // this position, but other files with 0x24 block size
    if (slotSize == 0x20){
        uint title_offset <comment="Offset of slot name", bgcolor=cGray>;
        uint space_size <bgcolor=cLtAqua>; // Trailing padding after save slot
        uint end <comment="End of block size?">;
    } else if (slotSize == 0x24){
        uint unknown_3;
        uint space_size <bgcolor=cLtAqua>;
        uint unknown_4;
        uint title_offset <bgcolor=cGray>;
    }
};

wstring ReadSlotMeta(SlotMeta &meta){
    return ReadWString(meta.title_offset);
}

typedef struct{
    byte md5[16];
} Checksum <read=ChecksumToString, bgcolor=cLtGreen>;

typedef struct (uint name_block_size) {
    wchar_t title[name_block_size];
} SlotTitle <read=GetSlotTitle>;

typedef struct {
    // File header
    char     Signature[8] <comment="BND4 file format">;    //0x424e4434 0x00000000
    uint     Revision <comment="May be revision">; // 0x00000100
    // Container size
    uint     ContainerCount <fgcolor=cWhite, bgcolor=cBlue, 
                                 comment="Total number of containers">;
    uint     Unknown2 <bgcolor=cLtPurple>;
    uint     Unkwown3 <bgcolor=cLtPurple>;
    char     Version[8] <comment="Probably a version">;
    uint     SlotMetaBlockSize <fgcolor=cAqua, bgcolor=cLtBlue,
                                comment="Slot header size">;
    uint     Unknown4;
    // Offset of first byte of save slot array (End of metadata/header block)
    uint     MetaSize <bgcolor=cLtRed,
                       name="Meta Size",
                       comment="Meta size">;
    uint     reserved1;
    uint     uint_unknown1 <bgcolor=cLtPurple>;
    byte     char_unknown2[12] <bgcolor=cLtPurple>;
    // SlotMeta chunks[ContainerCount];
    SlotMeta chunks(SlotMetaBlockSize)[ContainerCount]<read=GetSlotOffset, optimize=true>;
    // Slot title structure
    local uint i, name_block_size = 0;
    for (i = 0; i < ContainerCount; i++){
        name_block_size = ReadWStringLength(chunks[i].title_offset);
        SlotTitle title(name_block_size);
    }
    byte EOFBNDMeta[MetaSize - FTell()] <name="End of meta", fgcolor=cLtYellow>;
} BND4 <read=ReadBND4>;

string GetSlotOffset(SlotMeta &sm) {
    local string ret_str = "";
    return SPrintf(ret_str, "Slot offset: %d (0x%x)", sm.start, sm.start);
}

string GetSlotTitle(SlotTitle &st) {
    return WStringToString(st.title);
}

string ReadBND4(BND4 &file )
{
    if( exists( file.dsSignature ) )
        return file.dsSignature;
    else
        return "";
}

#endif // _SL2_BND4_BT